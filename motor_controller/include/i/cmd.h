// Generated by gencpp from file motor_controller/cmd.msg
// DO NOT EDIT!


#ifndef MOTOR_CONTROLLER_MESSAGE_CMD_H
#define MOTOR_CONTROLLER_MESSAGE_CMD_H

#include <ros/service_traits.h>


#include <cmdRequest.h>
#include <cmdResponse.h>


namespace motor_controller
{

struct cmd
{

typedef cmdRequest Request;
typedef cmdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct cmd
} // namespace motor_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::motor_controller::cmd > {
  static const char* value()
  {
    return "206e942db74d81f3a5da602b8336b721";
  }

  static const char* value(const ::motor_controller::cmd&) { return value(); }
};

template<>
struct DataType< ::motor_controller::cmd > {
  static const char* value()
  {
    return "motor_controller/cmd";
  }

  static const char* value(const ::motor_controller::cmd&) { return value(); }
};


// service_traits::MD5Sum< ::motor_controller::cmdRequest> should match 
// service_traits::MD5Sum< ::motor_controller::cmd > 
template<>
struct MD5Sum< ::motor_controller::cmdRequest>
{
  static const char* value()
  {
    return MD5Sum< ::motor_controller::cmd >::value();
  }
  static const char* value(const ::motor_controller::cmdRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::motor_controller::cmdRequest> should match 
// service_traits::DataType< ::motor_controller::cmd > 
template<>
struct DataType< ::motor_controller::cmdRequest>
{
  static const char* value()
  {
    return DataType< ::motor_controller::cmd >::value();
  }
  static const char* value(const ::motor_controller::cmdRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::motor_controller::cmdResponse> should match 
// service_traits::MD5Sum< ::motor_controller::cmd > 
template<>
struct MD5Sum< ::motor_controller::cmdResponse>
{
  static const char* value()
  {
    return MD5Sum< ::motor_controller::cmd >::value();
  }
  static const char* value(const ::motor_controller::cmdResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::motor_controller::cmdResponse> should match 
// service_traits::DataType< ::motor_controller::cmd > 
template<>
struct DataType< ::motor_controller::cmdResponse>
{
  static const char* value()
  {
    return DataType< ::motor_controller::cmd >::value();
  }
  static const char* value(const ::motor_controller::cmdResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOTOR_CONTROLLER_MESSAGE_CMD_H
